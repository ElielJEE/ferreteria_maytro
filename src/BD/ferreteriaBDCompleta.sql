-- Crear la base de datos y usarla
CREATE DATABASE IF NOT EXISTS ferreteria_maytro
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci;

USE ferreteria_maytro;


SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS USUARIOS_CREDITOS;
DROP TABLE IF EXISTS REABASTECIMIENTO;
DROP TABLE IF EXISTS FACTURA_DETALLES;
DROP TABLE IF EXISTS FACTURA;
DROP TABLE IF EXISTS `ENTRADA_BODEGA`;
DROP TABLE IF EXISTS DEVOLUCION;
DROP TABLE IF EXISTS DETALLES_COMPRA;
DROP TABLE IF EXISTS COMPRAS;
DROP TABLE IF EXISTS APERTURA_CAJA;
DROP TABLE IF EXISTS PRODUCTOS;
DROP TABLE IF EXISTS NIVELACION;
DROP TABLE IF EXISTS SUBCATEGORIAS;
DROP TABLE IF EXISTS CATEGORIAS;
DROP TABLE IF EXISTS BODEGA;
DROP TABLE IF EXISTS CAJA;
DROP TABLE IF EXISTS PROVEEDOR;
DROP TABLE IF EXISTS ROL;
DROP TABLE IF EXISTS CLIENTES;
DROP TABLE IF EXISTS USUARIOS;

SET FOREIGN_KEY_CHECKS = 1;

--
-- TABLA: USUARIOS
--
CREATE TABLE USUARIOS (
    ID                   INT NOT NULL AUTO_INCREMENT,
    NOMBRE               VARCHAR(255),
    NOMBRE_USUARIO       VARCHAR(255)    NOT NULL,
    CORREO               VARCHAR(255)    NOT NULL,
    CONTRASENA           VARCHAR(255)    NOT NULL,
    ESTATUS              VARCHAR(10)     NOT NULL,
    ID_ROL               INT              NOT NULL,
    PRIMARY KEY (ID),
    INDEX idx_usuarios_idrol (ID_ROL)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: ROL
--
CREATE TABLE ROL (
    ID_ROL      INT NOT NULL AUTO_INCREMENT,
    ROL_NAME    VARCHAR(255)    NOT NULL,
    PRIMARY KEY (ID_ROL)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: CLIENTES
--
CREATE TABLE CLIENTES (
    ID_CLIENTES          INT NOT NULL AUTO_INCREMENT,
    NOMBRE_CLIENTE       VARCHAR(255)    NOT NULL,
    DIRECCION_CLIENTE    VARCHAR(255)    NOT NULL,
    TELEFONO_CLIENTE     VARCHAR(20)     NOT NULL,
    PRIMARY KEY (ID_CLIENTES)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: CAJA
--
CREATE TABLE CAJA (
    ID_CAJA        VARCHAR(10)     NOT NULL,
    DESCRIPCION    VARCHAR(255),
    PRIMARY KEY (ID_CAJA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: APERTURA_CAJA
--
CREATE TABLE APERTURA_CAJA (
    D_APERTURA    VARCHAR(10)       NOT NULL,
    ID_CAJA       VARCHAR(10),
    ID            INT,
    ESTADO        VARCHAR(255)      NOT NULL,
    MONTO         DECIMAL(12,2)     NOT NULL,
    FECHA         DATE              NOT NULL,
    PRIMARY KEY (D_APERTURA),
    INDEX idx_apertura_id (ID),
    INDEX idx_apertura_idcaja (ID_CAJA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: BODEGA
--
CREATE TABLE BODEGA (
    ID_BODEGA             VARCHAR(10)     NOT NULL,
    DESCRIPCION_BODEGA    VARCHAR(255),
    ID                    INT,
    PRIMARY KEY (ID_BODEGA),
    INDEX idx_bodega_id (ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: PROVEEDOR
--
CREATE TABLE PROVEEDOR (
    ID_PROVEEDOR          INT NOT NULL AUTO_INCREMENT,
    NOMBRE_PROVEEDOR      VARCHAR(255)    NOT NULL,
    TELEFONO_PROVEEDOR    VARCHAR(20),
    PRIMARY KEY (ID_PROVEEDOR)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: CATEGORIAS
--
CREATE TABLE CATEGORIAS (
    ID_CATEGORIAS        VARCHAR(10)     NOT NULL,
    NOMBRE_CATEGORIAS    VARCHAR(255)    NOT NULL,
    PRIMARY KEY (ID_CATEGORIAS)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: SUBCATEGORIAS
--
CREATE TABLE SUBCATEGORIAS (
    ID_SUBCATEGORIAS       VARCHAR(10)     NOT NULL,
    NOMBRE_SUBCATEGORIA    VARCHAR(255)    NOT NULL,
    ID_CATEGORIAS          VARCHAR(10),
    PRIMARY KEY (ID_SUBCATEGORIAS),
    INDEX idx_subcat_idcat (ID_CATEGORIAS)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: PRODUCTOS
--
CREATE TABLE PRODUCTOS (
    ID_PRODUCT          INT NOT NULL AUTO_INCREMENT,
    CODIGO_PRODUCTO     VARCHAR(50), -- Nuevo campo agregado
    PRODUCT_NAME        VARCHAR(255)    NOT NULL,
    CANTIDAD            INT          NOT NULL,
    CANTIDAD_STOCK      VARCHAR(50),
    PRECIO              DECIMAL(12,2),
  ID_SUBCATEGORIAS    VARCHAR(10),
    PRIMARY KEY (ID_PRODUCT),
    INDEX idx_productos_idsub (ID_SUBCATEGORIAS)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: DETALLES_COMPRA
--
CREATE TABLE DETALLES_COMPRA (
    ID_DETALLES_COMPRA    INT NOT NULL AUTO_INCREMENT,
    ID_PRODUCT            INT,
    AMOUNT                INT         NOT NULL,
    TIPO_PAGO             VARCHAR(50),
    SUB_TOTAL             DECIMAL(12,2) NOT NULL,
    NUMERO_REFERENCIA     VARCHAR(50),
    ID_PROVEEDOR          INT,
    PRIMARY KEY (ID_DETALLES_COMPRA),
    INDEX idx_detcomp_product (ID_PRODUCT),
    INDEX idx_detcomp_prov (ID_PROVEEDOR)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: COMPRAS
--
CREATE TABLE COMPRAS (
    ID_COMPRA             INT NOT NULL AUTO_INCREMENT,
    FECHA_PEDIDO          DATE           NOT NULL,
    FECHA_ENTREGA         DATE,
    TOTAL                 DECIMAL(12,2)    NOT NULL,
    ID_DETALLES_COMPRA    INT,
    PRIMARY KEY (ID_COMPRA),
    INDEX idx_compras_detalles (ID_DETALLES_COMPRA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: ENTRADA_BODEGA
--
CREATE TABLE `ENTRADA_BODEGA` (
    ID_ENTRADA_BODEGA    VARCHAR(10)    NOT NULL,
    ID_COMPRA            INT,
    ID_BODEGA            VARCHAR(10),
    ESTADO               INT,
    PRIMARY KEY (ID_ENTRADA_BODEGA),
    INDEX idx_entb_compra (ID_COMPRA),
    INDEX idx_entb_bodega (ID_BODEGA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: FACTURA_DETALLES
--
CREATE TABLE FACTURA_DETALLES (
    ID_DETALLES_FACTURA    INT NOT NULL AUTO_INCREMENT,
    AMOUNT                 INT    NOT NULL,
    SUB_TOTAL              DECIMAL(12,2)    NOT NULL,
    ID_PRODUCT             INT,
    ID_USUARIO             INT,
    PRIMARY KEY (ID_DETALLES_FACTURA),
    INDEX idx_factdet_product (ID_PRODUCT),
    INDEX idx_factdet_usuario (ID_USUARIO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: FACTURA
--
CREATE TABLE FACTURA (
    ID_FACTURA             INT NOT NULL AUTO_INCREMENT,
    FECHA                  DATE,
    TOTAL                  DECIMAL(12,2)  NOT NULL,
    D_APERTURA             VARCHAR(10),
    ID_DETALLES_FACTURA    INT,
    ID_CLIENTES            INT,
    PRIMARY KEY (ID_FACTURA),
    INDEX idx_fact_dapertura (D_APERTURA),
    INDEX idx_fact_detalles (ID_DETALLES_FACTURA),
    INDEX idx_fact_clientes (ID_CLIENTES)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: DEVOLUCION
--
CREATE TABLE DEVOLUCION (
    ID_DEVOLUCION          VARCHAR(10)    NOT NULL,
    CANTIDAD               INT,
    ESTADO                 VARCHAR(10),
    ID_DETALLES_FACTURA    INT,
    ID_PRODUCT             INT,
    PRIMARY KEY (ID_DEVOLUCION),
    INDEX idx_devol_detfac (ID_DETALLES_FACTURA),
    INDEX idx_devol_product (ID_PRODUCT)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: NIVELACION
--
CREATE TABLE NIVELACION (
    ID_NIVELACION    INT NOT NULL AUTO_INCREMENT,
    CANTIDAD         VARCHAR(50),
    CANTIDAD_MAX     VARCHAR(50),
    DESCRIPCION      VARCHAR(255),
    ID_PRODUCT       INT,
    PRIMARY KEY (ID_NIVELACION),
    INDEX idx_nivel_product (ID_PRODUCT)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: REABASTECIMIENTO
--
CREATE TABLE REABASTECIMIENTO (
    ID_REABASTECER          VARCHAR(10)    NOT NULL,
    CANTIDAD_REABASTECER    INT         NOT NULL,
    ID_PRODUCT              INT,
    ID_BODEGA               VARCHAR(10),
    PRIMARY KEY (ID_REABASTECER),
    INDEX idx_reab_product (ID_PRODUCT),
    INDEX idx_reab_bodega (ID_BODEGA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- TABLA: USUARIOS_CREDITOS
--
CREATE TABLE USUARIOS_CREDITOS (
    ID_USUARIOSCRED    VARCHAR(10)    NOT NULL,
    MONTO_PAGO         VARCHAR(20),
    MONTO_DEUDA        DECIMAL(12,2)         NOT NULL,
    ID_FACTURA         INT,
    PRIMARY KEY (ID_USUARIOSCRED),
    INDEX idx_usucred_fact (ID_FACTURA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE SUCURSAL (
    ID_SUCURSAL VARCHAR(10) NOT NULL,
    NOMBRE_SUCURSAL VARCHAR(255) NOT NULL,
    DIRECCION VARCHAR(255),
    TELEFONO VARCHAR(20),
    PRIMARY KEY (ID_SUCURSAL)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE STOCK_SUCURSAL (
    ID_PRODUCT INT NOT NULL,
    ID_SUCURSAL VARCHAR(10) NOT NULL,
    CANTIDAD INT NOT NULL,
  STATUS VARCHAR(10) DEFAULT 'ACTIVO',
    PRIMARY KEY (ID_PRODUCT, ID_SUCURSAL),
    CONSTRAINT fk_stock_producto FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_stock_sucursal FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS MOVIMIENTOS_INVENTARIO (
  id INT AUTO_INCREMENT PRIMARY KEY,
  producto_id INT NULL,
  sucursal_id VARCHAR(10) NULL,
  usuario_id INT NULL,
  -- incluir 'danado' para representar movimientos por da√±o desde frontend
  tipo_movimiento ENUM('entrada','salida','danado','transferencia','reservado') NOT NULL,
  cantidad INT NOT NULL,
  motivo VARCHAR(255),
  fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  referencia_id VARCHAR(50),
  -- columnas adicionales requeridas por la vista frontend
  stock_anterior INT NULL,
  stock_nuevo INT NULL,
  INDEX idx_mov_prod (producto_id),
  INDEX idx_mov_suc (sucursal_id),
  INDEX idx_mov_user (usuario_id),
  INDEX idx_mov_fecha (fecha),
  CONSTRAINT fk_mov_prod FOREIGN KEY (producto_id) REFERENCES PRODUCTOS(ID_PRODUCT) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_mov_suc FOREIGN KEY (sucursal_id) REFERENCES SUCURSAL(ID_SUCURSAL) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT fk_mov_user FOREIGN KEY (usuario_id) REFERENCES USUARIOS(ID) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS STOCK_DANADOS (
	ID_DANADO INT NOT NULL AUTO_INCREMENT,
	ID_PRODUCT INT NOT NULL,
	ID_SUCURSAL VARCHAR(20) NULL,
	CANTIDAD INT NOT NULL DEFAULT 0,
	TIPO_DANO VARCHAR(100) NULL,
	ESTADO VARCHAR(100) NULL,
	DESCRIPCION TEXT NULL,
	USUARIO_ID INT NULL,
	REFERENCIA VARCHAR(100) NULL,
	PERDIDA DECIMAL(10,2) NOT NULL DEFAULT 0.00,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (ID_DANADO),
	INDEX idx_sd_prod (ID_PRODUCT),
	INDEX idx_sd_suc (ID_SUCURSAL),
	CONSTRAINT fk_sd_prod FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_sd_suc FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- =========================
-- CLAVES FORANEAS
-- =========================

-- APERTURA_CAJA.ID_CAJA -> CAJA.ID_CAJA
ALTER TABLE APERTURA_CAJA
  ADD CONSTRAINT fk_apertura_caja_caja
    FOREIGN KEY (ID_CAJA) REFERENCES CAJA(ID_CAJA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- APERTURA_CAJA.ID -> USUARIOS.ID
ALTER TABLE APERTURA_CAJA
  ADD CONSTRAINT fk_apertura_caja_usuarios
    FOREIGN KEY (ID) REFERENCES USUARIOS(ID)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- BODEGA.ID -> USUARIOS.ID
ALTER TABLE BODEGA
  ADD CONSTRAINT fk_bodega_usuarios
    FOREIGN KEY (ID) REFERENCES USUARIOS(ID)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- DETALLES_COMPRA.ID_PRODUCT -> PRODUCTOS.ID_PRODUCT
ALTER TABLE DETALLES_COMPRA
  ADD CONSTRAINT fk_detcomp_productos
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- DETALLES_COMPRA.ID_PROVEEDOR -> PROVEEDOR.ID_PROVEEDOR
ALTER TABLE DETALLES_COMPRA
  ADD CONSTRAINT fk_detcomp_proveedor
    FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- COMPRAS.ID_DETALLES_COMPRA -> DETALLES_COMPRA.ID_DETALLES_COMPRA
ALTER TABLE COMPRAS
  ADD CONSTRAINT fk_compras_detalles
    FOREIGN KEY (ID_DETALLES_COMPRA) REFERENCES DETALLES_COMPRA(ID_DETALLES_COMPRA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- ENTRADA_BODEGA.ID_COMPRA -> COMPRAS.ID_COMPRA
ALTER TABLE `ENTRADA_BODEGA`
  ADD CONSTRAINT fk_entb_compra
    FOREIGN KEY (ID_COMPRA) REFERENCES COMPRAS(ID_COMPRA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- ENTRADA_BODEGA.ID_BODEGA -> BODEGA.ID_BODEGA
ALTER TABLE `ENTRADA_BODEGA`
  ADD CONSTRAINT fk_entb_bodega
    FOREIGN KEY (ID_BODEGA) REFERENCES BODEGA(ID_BODEGA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- FACTURA.ID_CLIENTES -> CLIENTES.ID_CLIENTES
ALTER TABLE FACTURA
  ADD CONSTRAINT fk_factura_clientes
    FOREIGN KEY (ID_CLIENTES) REFERENCES CLIENTES(ID_CLIENTES)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- FACTURA.D_APERTURA -> APERTURA_CAJA.D_APERTURA
ALTER TABLE FACTURA
  ADD CONSTRAINT fk_factura_apertura
    FOREIGN KEY (D_APERTURA) REFERENCES APERTURA_CAJA(D_APERTURA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- FACTURA.ID_DETALLES_FACTURA -> FACTURA_DETALLES.ID_DETALLES_FACTURA
ALTER TABLE FACTURA
  ADD CONSTRAINT fk_factura_factdet
    FOREIGN KEY (ID_DETALLES_FACTURA) REFERENCES FACTURA_DETALLES(ID_DETALLES_FACTURA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- FACTURA_DETALLES.ID_PRODUCT -> PRODUCTOS.ID_PRODUCT
ALTER TABLE FACTURA_DETALLES
  ADD CONSTRAINT fk_factdet_productos
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- FACTURA_DETALLES.ID_USUARIO -> USUARIOS.ID
ALTER TABLE FACTURA_DETALLES
  ADD CONSTRAINT fk_factdet_usuarios
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- DEVOLUCION.ID_PRODUCT -> PRODUCTOS.ID_PRODUCT
ALTER TABLE DEVOLUCION
  ADD CONSTRAINT fk_devolucion_productos
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- DEVOLUCION.ID_DETALLES_FACTURA -> FACTURA_DETALLES.ID_DETALLES_FACTURA
ALTER TABLE DEVOLUCION
  ADD CONSTRAINT fk_devolucion_factdet
    FOREIGN KEY (ID_DETALLES_FACTURA) REFERENCES FACTURA_DETALLES(ID_DETALLES_FACTURA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- NIVELACION.ID_PRODUCT -> PRODUCTOS.ID_PRODUCT
ALTER TABLE NIVELACION
  ADD CONSTRAINT fk_nivelacion_productos
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- PRODUCTOS.ID_SUBCATEGORIAS -> SUBCATEGORIAS.ID_SUBCATEGORIAS
ALTER TABLE PRODUCTOS
  ADD CONSTRAINT fk_productos_subcat
    FOREIGN KEY (ID_SUBCATEGORIAS) REFERENCES SUBCATEGORIAS(ID_SUBCATEGORIAS)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- REABASTECIMIENTO.ID_PRODUCT -> PRODUCTOS.ID_PRODUCT
ALTER TABLE REABASTECIMIENTO
  ADD CONSTRAINT fk_reab_productos
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTOS(ID_PRODUCT)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- REABASTECIMIENTO.ID_BODEGA -> BODEGA.ID_BODEGA
ALTER TABLE REABASTECIMIENTO
  ADD CONSTRAINT fk_reab_bodega
    FOREIGN KEY (ID_BODEGA) REFERENCES BODEGA(ID_BODEGA)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- SUBCATEGORIAS.ID_CATEGORIAS -> CATEGORIAS.ID_CATEGORIAS
ALTER TABLE SUBCATEGORIAS
  ADD CONSTRAINT fk_subcat_categorias
    FOREIGN KEY (ID_CATEGORIAS) REFERENCES CATEGORIAS(ID_CATEGORIAS)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- USUARIOS.ID_ROL -> ROL.ID_ROL
ALTER TABLE USUARIOS
  ADD CONSTRAINT fk_usuarios_rol
    FOREIGN KEY (ID_ROL) REFERENCES ROL(ID_ROL)
    ON DELETE RESTRICT ON UPDATE CASCADE;

-- USUARIOS_CREDITOS.ID_FACTURA -> FACTURA.ID_FACTURA
ALTER TABLE USUARIOS_CREDITOS
  ADD CONSTRAINT fk_usucred_factura
    FOREIGN KEY (ID_FACTURA) REFERENCES FACTURA(ID_FACTURA)
    ON DELETE SET NULL ON UPDATE CASCADE;
    
ALTER TABLE USUARIOS ADD COLUMN ID_SUCURSAL VARCHAR(10);
ALTER TABLE USUARIOS ADD INDEX idx_usuarios_idsucursal (ID_SUCURSAL);
ALTER TABLE USUARIOS
  ADD CONSTRAINT fk_usuarios_sucursal
    FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL)
    ON DELETE SET NULL ON UPDATE CASCADE;
    
ALTER TABLE FACTURA ADD COLUMN ID_SUCURSAL VARCHAR(10);
ALTER TABLE FACTURA ADD INDEX idx_fact_idsucursal (ID_SUCURSAL);
ALTER TABLE FACTURA
  ADD CONSTRAINT fk_factura_sucursal
    FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL)
    ON DELETE SET NULL ON UPDATE CASCADE;

-- Agregar columna ID_SUCURSAL a PRODUCTOS para saber en qu√© sucursal est√° asignado (opcional)
ALTER TABLE PRODUCTOS
  ADD COLUMN ID_SUCURSAL VARCHAR(10),
  ADD INDEX idx_productos_idsucursal (ID_SUCURSAL),
  ADD CONSTRAINT fk_productos_sucursal
    FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL)
    ON DELETE SET NULL ON UPDATE CASCADE;


-- 1) Crear el rol ADMIN si no existe
INSERT INTO ROL (ROL_NAME)
SELECT 'ADMIN' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM ROL WHERE ROL_NAME = 'ADMIN');

-- Obtener el id del rol ADMIN
SET @admin_role_id = (SELECT ID_ROL FROM ROL WHERE ROL_NAME = 'ADMIN' LIMIT 1);

-- 2) Insertar el usuario administrador solo si no existe
-- La contrase√±a (bcrypt) corresponde a: Admin123!
INSERT INTO USUARIOS (NOMBRE, NOMBRE_USUARIO, CORREO, CONTRASENA, ESTATUS, ID_ROL)
SELECT 'Administrador', 'admin', 'admin@local', '$2b$12$pmU5.BK.qYmaixEb8vW06eeznqlmDR97FElNJsJ7btWWIG3PNwe4G', 'ACTIVO', @admin_role_id
FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM USUARIOS WHERE NOMBRE_USUARIO = 'admin');

ALTER TABLE FACTURA DROP FOREIGN KEY fk_factura_sucursal;

INSERT INTO SUCURSAL (ID_SUCURSAL, NOMBRE_SUCURSAL, DIRECCION, TELEFONO) VALUES
('S1', 'Sucursal Sur', 'Avenida Sur 123', '8888-0001'),
('S2', 'Sucursal Centro', 'Calle Central 456', '8888-0002');

